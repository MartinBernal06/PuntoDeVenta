package vistas;

import java.awt.Color;
import java.awt.Frame;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import negocio.ControlEmpleados;
import objetosNegocio.Empleado;

/**
 *
 * @author MartinBernal
 */
public class FrmEmpleados extends javax.swing.JFrame {

    private final ControlEmpleados controlEmpleados = new ControlEmpleados();

    /**
     * Creates new form FrmEmpleados
     *
     * @param frame
     * @throws java.sql.SQLException
     */
    public FrmEmpleados() throws SQLException {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/imagenes/Empleados.jpg")).getImage());
        this.llenarAños();
        this.cargarEmpleados();
        this.cargarNumEmpleado();
        this.ocultarErrores();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        lblTitulo = new javax.swing.JLabel();
        lblImagen = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        lblSexo = new javax.swing.JLabel();
        lblNumEmpleado = new javax.swing.JLabel();
        lblFechaNac = new javax.swing.JLabel();
        lblContraseña = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        lblDireccion = new javax.swing.JLabel();
        lblPuesto = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        txtNumEmpleado = new javax.swing.JTextField();
        cboxDia = new javax.swing.JComboBox<>();
        cboxMes = new javax.swing.JComboBox<>();
        cboxAño = new javax.swing.JComboBox<>();
        cboxPuesto = new javax.swing.JComboBox<>();
        cboxSexo = new javax.swing.JComboBox<>();
        paneTablaEmpleados = new javax.swing.JScrollPane();
        tableEmpleados = new javax.swing.JTable();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        lblErrorNombre = new javax.swing.JLabel();
        lblErrorSexo = new javax.swing.JLabel();
        lblErrorDireccion = new javax.swing.JLabel();
        lblErrorContra = new javax.swing.JLabel();
        lblErrorPuesto = new javax.swing.JLabel();
        lblImagen1 = new javax.swing.JLabel();
        lblErrorFechaNac = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lblTextoErrorConfirmacion = new javax.swing.JLabel();
        txtConfirmacion = new javax.swing.JPasswordField();
        txtContraseña = new javax.swing.JPasswordField();
        lblConfirmacion1 = new javax.swing.JLabel();
        lblErrorConfirmacion = new javax.swing.JLabel();
        lblTelefono = new javax.swing.JLabel();
        lblErrorTelefono = new javax.swing.JLabel();
        txtTelefono = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        lblErrorRFC = new javax.swing.JLabel();
        txtRFC = new javax.swing.JTextField();
        lblRFC = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administración de Empleados");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTitulo.setFont(new java.awt.Font("Castellar", 1, 14)); // NOI18N
        lblTitulo.setForeground(new java.awt.Color(0, 102, 153));
        lblTitulo.setText("AdministraciÓn de empleados");
        getContentPane().add(lblTitulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 25, 308, -1));

        lblImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Empleados.jpg"))); // NOI18N
        getContentPane().add(lblImagen, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 11, -1, 62));

        lblNombre.setText("Nombre:");
        getContentPane().add(lblNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 94, -1, -1));

        lblSexo.setText("Sexo:");
        getContentPane().add(lblSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(273, 94, -1, -1));

        lblNumEmpleado.setText("Número de Empleado:");
        getContentPane().add(lblNumEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(133, 56, -1, -1));

        lblFechaNac.setText("Fecha de Nacimiento:");
        getContentPane().add(lblFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 129, -1, -1));

        lblContraseña.setText("Contraseña:");
        getContentPane().add(lblContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, -1, -1));

        jSeparator1.setBackground(new java.awt.Color(0, 102, 153));
        jSeparator1.setForeground(new java.awt.Color(0, 102, 153));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 570, 10));

        lblDireccion.setText("Dirección:");
        getContentPane().add(lblDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 160, 70, -1));

        lblPuesto.setText("Puesto:");
        getContentPane().add(lblPuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, -1, -1));

        txtDireccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDireccionActionPerformed(evt);
            }
        });
        txtDireccion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionKeyTyped(evt);
            }
        });
        getContentPane().add(txtDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 170, -1));

        txtNumEmpleado.setEditable(false);
        txtNumEmpleado.setText("0");
        txtNumEmpleado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumEmpleadoActionPerformed(evt);
            }
        });
        getContentPane().add(txtNumEmpleado, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 50, 82, -1));

        cboxDia.setForeground(new java.awt.Color(0, 102, 153));
        cboxDia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Día", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
        getContentPane().add(cboxDia, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, -1, -1));

        cboxMes.setForeground(new java.awt.Color(0, 102, 153));
        cboxMes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mes", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cboxMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxMesActionPerformed(evt);
            }
        });
        getContentPane().add(cboxMes, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, -1, -1));

        cboxAño.setForeground(new java.awt.Color(0, 102, 153));
        cboxAño.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Año" }));
        getContentPane().add(cboxAño, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 120, -1, -1));

        cboxPuesto.setForeground(new java.awt.Color(0, 102, 153));
        cboxPuesto.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione 1", "Administrador", "Supervisor", "Cajero" }));
        getContentPane().add(cboxPuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 200, -1, -1));

        cboxSexo.setForeground(new java.awt.Color(0, 102, 153));
        cboxSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione 1", "Hombre", "Mujer", "Indefinido" }));
        getContentPane().add(cboxSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(305, 91, -1, -1));

        tableEmpleados.setBackground(new java.awt.Color(0, 102, 153));
        tableEmpleados.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 102, 153)));
        tableEmpleados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Puesto", "Nombre", "Fecha de Ingreso", "Faltante", "Telefono"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Float.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableEmpleados.setGridColor(new java.awt.Color(0, 102, 153));
        tableEmpleados.setSelectionForeground(new java.awt.Color(0, 153, 153));
        paneTablaEmpleados.setViewportView(tableEmpleados);

        getContentPane().add(paneTablaEmpleados, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 550, 120));

        btnGuardar.setBackground(new java.awt.Color(0, 102, 153));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 440, -1, -1));

        btnCancelar.setBackground(new java.awt.Color(0, 102, 153));
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, -1, -1));

        btnActualizar.setBackground(new java.awt.Color(0, 102, 153));
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 440, -1, -1));

        btnEliminar.setBackground(new java.awt.Color(0, 102, 153));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 440, -1, -1));

        lblErrorNombre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ErrorDeCampo.jpg"))); // NOI18N
        lblErrorNombre.setRequestFocusEnabled(false);
        getContentPane().add(lblErrorNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 96, -1, -1));

        lblErrorSexo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ErrorDeCampo.jpg"))); // NOI18N
        getContentPane().add(lblErrorSexo, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 90, -1, -1));

        lblErrorDireccion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ErrorDeCampo.jpg"))); // NOI18N
        getContentPane().add(lblErrorDireccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 150, -1, -1));

        lblErrorContra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ErrorDeCampo.jpg"))); // NOI18N
        getContentPane().add(lblErrorContra, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 230, -1, -1));

        lblErrorPuesto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ErrorDeCampo.jpg"))); // NOI18N
        getContentPane().add(lblErrorPuesto, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, -1, -1));

        lblImagen1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/Empleados.jpg"))); // NOI18N
        getContentPane().add(lblImagen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(447, 11, -1, 62));

        lblErrorFechaNac.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ErrorDeCampo.jpg"))); // NOI18N
        getContentPane().add(lblErrorFechaNac, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, -1, -1));

        jSeparator2.setBackground(new java.awt.Color(0, 102, 153));
        jSeparator2.setForeground(new java.awt.Color(0, 102, 153));
        getContentPane().add(jSeparator2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 420, 560, 10));

        lblTextoErrorConfirmacion.setForeground(new java.awt.Color(255, 0, 0));
        lblTextoErrorConfirmacion.setText("Error en validacion.");
        getContentPane().add(lblTextoErrorConfirmacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 260, 114, -1));

        txtConfirmacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtConfirmacionKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtConfirmacionKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtConfirmacionKeyTyped(evt);
            }
        });
        getContentPane().add(txtConfirmacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, 130, -1));

        txtContraseña.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtContraseñaKeyTyped(evt);
            }
        });
        getContentPane().add(txtContraseña, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 130, -1));

        lblConfirmacion1.setText("Confirmación:");
        getContentPane().add(lblConfirmacion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, 79, -1));

        lblErrorConfirmacion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ErrorDeCampo.jpg"))); // NOI18N
        getContentPane().add(lblErrorConfirmacion, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 230, -1, -1));

        lblTelefono.setText("Telefono:");
        getContentPane().add(lblTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 200, 79, -1));

        lblErrorTelefono.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ErrorDeCampo.jpg"))); // NOI18N
        getContentPane().add(lblErrorTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 190, -1, -1));

        txtTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoActionPerformed(evt);
            }
        });
        txtTelefono.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoKeyTyped(evt);
            }
        });
        getContentPane().add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, 150, -1));

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });
        txtNombre.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreKeyTyped(evt);
            }
        });
        getContentPane().add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(57, 91, 177, -1));

        lblErrorRFC.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/ErrorDeCampo.jpg"))); // NOI18N
        getContentPane().add(lblErrorRFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, -1, -1));

        txtRFC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRFCActionPerformed(evt);
            }
        });
        txtRFC.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRFCKeyTyped(evt);
            }
        });
        getContentPane().add(txtRFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 190, -1));

        lblRFC.setText("RFC:");
        getContentPane().add(lblRFC, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 79, -1));

        lblFondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/FondoPantalla.jpg"))); // NOI18N
        getContentPane().add(lblFondo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 570, 520));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDireccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDireccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDireccionActionPerformed

    private void cboxMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxMesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cboxMesActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        int numEmpleado = Integer.parseInt(txtNumEmpleado.getText() + "");
        Empleado empleado;
        try {
            empleado = controlEmpleados.obtenerEmpleadoPorId(numEmpleado);

            if (empleado == null) {
                this.agregarEmpleado();
            } else {
                this.actualizarEmpleado();
            }
        } catch (SQLException ex) {
            Logger.getLogger(FrmEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParseException ex) {
            Logger.getLogger(FrmEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtDireccionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionKeyTyped
        if (txtDireccion.getText().length() > 50) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Excedió el número máximo de caracteres  ", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtDireccionKeyTyped

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        try {
            this.limpiarFormulario();
            this.cargarEmpleados();
            this.cargarNumEmpleado();
            this.ocultarErrores();
        } catch (SQLException ex) {
            Logger.getLogger(FrmEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        int fila = this.tableEmpleados.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Debe selecionar un empleado. ", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel modelo = (DefaultTableModel) this.tableEmpleados.getModel();
            String numEmpleado = modelo.getValueAt(fila, 0) + "";
            if (this.txtNumEmpleado.getText().equalsIgnoreCase(numEmpleado)) {
                JOptionPane.showMessageDialog(null, "Para terminar la actualización oprima el boton guardar ☺ ", "Información", JOptionPane.INFORMATION_MESSAGE);
            } else {
                try {
                    this.cargarEmpleado();
                } catch (SQLException ex) {
                    Logger.getLogger(FrmEmpleados.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            this.eliminarEmpleado();
        } catch (SQLException ex) {
            Logger.getLogger(FrmEmpleados.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void txtNumEmpleadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumEmpleadoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumEmpleadoActionPerformed

    private void txtContraseñaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtContraseñaKeyTyped
        if (txtContraseña.getText().length() > 12) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Excedió el número máximo de caracteres  ", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtContraseñaKeyTyped

    private void txtConfirmacionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmacionKeyTyped
        if (txtConfirmacion.getText().length() > 12) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Excedió el número máximo de caracteres  ", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_txtConfirmacionKeyTyped

    private void txtConfirmacionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmacionKeyPressed
        if (!txtConfirmacion.getText().equalsIgnoreCase(txtContraseña.getText())) {
            this.lblTextoErrorConfirmacion.setVisible(false);
        } else {
            this.lblTextoErrorConfirmacion.setVisible(true);
        }
    }//GEN-LAST:event_txtConfirmacionKeyPressed

    private void txtTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoActionPerformed

    }//GEN-LAST:event_txtTelefonoActionPerformed

    private void txtTelefonoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoKeyTyped
    }//GEN-LAST:event_txtTelefonoKeyTyped

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtNombreKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreKeyTyped
    }//GEN-LAST:event_txtNombreKeyTyped

    private void txtRFCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRFCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRFCActionPerformed

    private void txtRFCKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRFCKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRFCKeyTyped

    private void txtConfirmacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtConfirmacionKeyReleased
        if (!txtConfirmacion.getText().equalsIgnoreCase(txtContraseña.getText())) {
            this.lblTextoErrorConfirmacion.setVisible(true);
        } else {
            this.lblTextoErrorConfirmacion.setVisible(false);
        }
    }//GEN-LAST:event_txtConfirmacionKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmEmpleados.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new FrmEmpleados().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(FrmEmpleados.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    private void llenarAños() {
        for (int i = 0; i < 80; i++) {
            this.cboxAño.addItem((new Date().getYear() - (90 - i) + 1900) + "");
        }
    }

    private void ocultarErrores() {
        this.lblErrorConfirmacion.setVisible(false);
        this.lblErrorRFC.setVisible(false);
        this.lblErrorDireccion.setVisible(false);
        this.lblErrorTelefono.setVisible(false);
        this.lblErrorContra.setVisible(false);
        this.lblErrorFechaNac.setVisible(false);
        this.lblErrorNombre.setVisible(false);
        this.lblErrorPuesto.setVisible(false);
        this.lblErrorSexo.setVisible(false);
        this.txtRFC.setBackground(Color.white);
        this.txtConfirmacion.setBackground(Color.white);
        this.txtContraseña.setBackground(Color.white);
        this.txtDireccion.setBackground(Color.white);
        this.txtNombre.setBackground(Color.white);
        this.txtNumEmpleado.setBackground(Color.white);
        this.cboxAño.setBackground(Color.white);
        this.cboxMes.setBackground(Color.white);
        this.txtDireccion.setBackground(Color.white);
        this.txtTelefono.setBackground(Color.white);
        this.cboxPuesto.setBackground(Color.white);
        this.cboxDia.setBackground(Color.white);
        this.cboxSexo.setBackground(Color.white);
    }

    private void limpiarFormulario() throws SQLException {
        this.txtDireccion.setText("");
        txtRFC.setText("");
        this.txtNombre.setText("");
        this.txtTelefono.setText("");
        this.txtConfirmacion.setText("");
        this.txtContraseña.setText("");
        this.txtNumEmpleado.setText("");
        this.cboxAño.setSelectedIndex(0);
        this.cboxMes.setSelectedIndex(0);
        this.cboxDia.setSelectedIndex(0);
        this.cboxPuesto.setSelectedIndex(0);
        this.cboxSexo.setSelectedIndex(0);
        this.cargarNumEmpleado();
        this.lblFondo.setText("1");
    }

    private int verificarCampos() {
        int confirmacion = 0;
        if (txtNombre.getText().equalsIgnoreCase("")) {
            lblErrorNombre.setVisible(true);
            txtNombre.setBackground(Color.red);
            confirmacion++;
        }
        if (txtDireccion.getText().equalsIgnoreCase("")) {
            lblErrorDireccion.setVisible(true);
            txtDireccion.setBackground(Color.red);
            confirmacion++;
        }
        if (txtRFC.getText().equalsIgnoreCase("")) {
            lblErrorRFC.setVisible(true);
            txtRFC.setBackground(Color.red);
            confirmacion++;
        }
        if (txtTelefono.getText().equalsIgnoreCase("")) {
            lblErrorTelefono.setVisible(true);
            txtTelefono.setBackground(Color.red);
            confirmacion++;
        }
        if (txtContraseña.getText().equalsIgnoreCase("")) {
            lblErrorContra.setVisible(true);
            txtContraseña.setBackground(Color.red);
            confirmacion++;
        }
        if (txtConfirmacion.getText().equalsIgnoreCase("") || !(txtConfirmacion.getText().equalsIgnoreCase(txtContraseña.getText()))) {
            lblErrorConfirmacion.setVisible(true);
            txtConfirmacion.setBackground(Color.red);
            confirmacion++;
        }

        if ((cboxAño.getSelectedItem() + "").equalsIgnoreCase("Año") || (cboxDia.getSelectedItem() + "").equalsIgnoreCase("Día") || (cboxMes.getSelectedItem() + "").equalsIgnoreCase("Mes")) {
            lblErrorFechaNac.setVisible(true);
            cboxAño.setBackground(Color.red);
            cboxMes.setBackground(Color.red);
            cboxDia.setBackground(Color.red);
            confirmacion++;
        }
        if ((cboxSexo.getSelectedItem() + "").equalsIgnoreCase("Seleccione 1")) {
            lblErrorSexo.setVisible(true);
            cboxSexo.setBackground(Color.red);
            confirmacion++;
        }
        if ((cboxPuesto.getSelectedItem() + "").equalsIgnoreCase("Seleccione 1")) {
            lblErrorPuesto.setVisible(true);
            cboxPuesto.setBackground(Color.red);
            confirmacion++;
        }
        return confirmacion;
    }

    private void cargarEmpleados() throws SQLException {
        List<Empleado> empleados = this.controlEmpleados.obtenerEmpleados();
        if (empleados != null) {
            DefaultTableModel modelo
                    = (DefaultTableModel) tableEmpleados.getModel();
            modelo.setRowCount(0);
            for (Empleado empleado : empleados) {
                modelo.addRow(empleado.toArray());
            }
        }
    }

    private void cargarEmpleado() throws SQLException {
        int fila = this.tableEmpleados.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un empleado  ", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            DefaultTableModel modelo = (DefaultTableModel) this.tableEmpleados.getModel();
            int numEmpleado = Integer.parseInt(modelo.getValueAt(fila, 0) + "");
            Empleado empleado = controlEmpleados.obtenerEmpleadoPorId(numEmpleado);
            this.txtConfirmacion.setText(empleado.getContrasenia());
            this.txtContraseña.setText(empleado.getContrasenia());
            this.txtDireccion.setText(empleado.getDireccion());
            this.txtTelefono.setText(empleado.getTelefono());
            this.txtNombre.setText(empleado.getNombre());
            this.txtRFC.setText(empleado.getRfc());
            this.txtNumEmpleado.setText(empleado.getId() + "");
            this.cboxAño.setSelectedItem((empleado.getFechaNac().getYear() + 1900) + "");
            this.cboxMes.setSelectedItem((empleado.getFechaNac().getMonth() + 1) + "");
            this.cboxDia.setSelectedItem(empleado.getFechaNac().getDate() + "");
            this.cboxPuesto.setSelectedItem(empleado.getTipo() + "");
            this.cboxSexo.setSelectedItem(empleado.getSexo() + "");
        }
    }

    private void cargarNumEmpleado() throws SQLException {
        List<Empleado> empleados = this.controlEmpleados.obtenerEmpleados();
        if (!empleados.isEmpty()) {
            Empleado empleado = empleados.get(empleados.size() - 1);
            txtNumEmpleado.setText((empleado.getId() + 1) + "");
        } else {
            txtNumEmpleado.setText("1");
        }
    }

    private void agregarEmpleado() throws ParseException, SQLException {
        this.ocultarErrores();
        if (this.verificarCampos() == 0) {
            String oldstring = ("" + cboxAño.getSelectedItem() + "-" + cboxMes.getSelectedItem() + "-" + cboxDia.getSelectedItem() + " 00:00:00.0");
            Date fecha = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S").parse(oldstring);
            Empleado empleado = new Empleado();
            empleado.setContrasenia(txtContraseña.getText());
            empleado.setFechaIngreso(new Date());
            empleado.setFechaNac(fecha);
            empleado.setNombre(txtNombre.getText());
            empleado.setRfc(txtRFC.getText());
            empleado.setDireccion(txtDireccion.getText());
            empleado.setTelefono(txtTelefono.getText());
            empleado.setTipo(cboxPuesto.getSelectedItem() + "");
            empleado.setSexo(cboxSexo.getSelectedItem() + "");
            boolean respuesta = this.controlEmpleados.agregarEmpleadoBD(empleado);
            if (respuesta) {
                this.limpiarFormulario();
                this.ocultarErrores();
                this.cargarEmpleados();
            }
        } else {
            JOptionPane.showMessageDialog(null, "No se perimiten campos vacios", "Error en datos", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void eliminarEmpleado() throws SQLException {
        this.cargarEmpleado();
        int fila = this.tableEmpleados.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Debes seleccionar un empleado de la lista", "Error al eliminar", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel modelo = (DefaultTableModel) this.tableEmpleados.getModel();
            int numEmpleado = Integer.parseInt(modelo.getValueAt(fila, 0) + "");
            this.controlEmpleados.eliminarEmpleadoBD(numEmpleado);
        }
        this.limpiarFormulario();
        this.ocultarErrores();
        this.cargarEmpleados();
    }

    private void actualizarEmpleado() throws SQLException, ParseException {
        int fila = this.tableEmpleados.getSelectedRow();
        if (fila == -1) {
            JOptionPane.showMessageDialog(this, "Debes seleccionar un empleado  ", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } else {
            if (this.verificarCampos() == 0) {
                DefaultTableModel modelo = (DefaultTableModel) this.tableEmpleados.getModel();
                int numEmpleado = Integer.parseInt(modelo.getValueAt(fila, 0) + "");
                Empleado empleado = controlEmpleados.obtenerEmpleadoPorId(numEmpleado);
                String oldstring = ("" + cboxAño.getSelectedItem() + "-" + cboxMes.getSelectedItem() + "-" + cboxDia.getSelectedItem() + " 00:00:00.0");
                Date fecha = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.S").parse(oldstring);
                empleado.setContrasenia(txtContraseña.getText());
                empleado.setFechaNac(fecha);
                empleado.setNombre(txtNombre.getText());
                empleado.setRfc(txtRFC.getText());
                empleado.setDireccion(txtDireccion.getText());
                empleado.setTelefono(txtTelefono.getText());
                empleado.setTipo(cboxPuesto.getSelectedItem() + "");
                empleado.setSexo(cboxSexo.getSelectedItem() + "");
                empleado.setContrasenia(txtContraseña.getText()+"");
                boolean resp = this.controlEmpleados.actualizarEmpleadoBD(numEmpleado, empleado);
                if (resp) {
                    this.limpiarFormulario();
                    this.ocultarErrores();
                    this.cargarEmpleados();
                }
            } else {
                JOptionPane.showMessageDialog(null, "No se perimiten campos vacios", "Error En Datos", JOptionPane.ERROR_MESSAGE);
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JComboBox<String> cboxAño;
    private javax.swing.JComboBox<String> cboxDia;
    private javax.swing.JComboBox<String> cboxMes;
    private javax.swing.JComboBox<String> cboxPuesto;
    private javax.swing.JComboBox<String> cboxSexo;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblConfirmacion1;
    private javax.swing.JLabel lblContraseña;
    private javax.swing.JLabel lblDireccion;
    private javax.swing.JLabel lblErrorConfirmacion;
    private javax.swing.JLabel lblErrorContra;
    private javax.swing.JLabel lblErrorDireccion;
    private javax.swing.JLabel lblErrorFechaNac;
    private javax.swing.JLabel lblErrorNombre;
    private javax.swing.JLabel lblErrorPuesto;
    private javax.swing.JLabel lblErrorRFC;
    private javax.swing.JLabel lblErrorSexo;
    private javax.swing.JLabel lblErrorTelefono;
    private javax.swing.JLabel lblFechaNac;
    private javax.swing.JLabel lblFondo;
    private javax.swing.JLabel lblImagen;
    private javax.swing.JLabel lblImagen1;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNumEmpleado;
    private javax.swing.JLabel lblPuesto;
    private javax.swing.JLabel lblRFC;
    private javax.swing.JLabel lblSexo;
    private javax.swing.JLabel lblTelefono;
    private javax.swing.JLabel lblTextoErrorConfirmacion;
    private javax.swing.JLabel lblTitulo;
    private javax.swing.JScrollPane paneTablaEmpleados;
    private javax.swing.JTable tableEmpleados;
    private javax.swing.JPasswordField txtConfirmacion;
    private javax.swing.JPasswordField txtContraseña;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtNumEmpleado;
    private javax.swing.JTextField txtRFC;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
